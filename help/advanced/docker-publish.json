{
  "name": "docker-publish",
  "aliases": ["dpublish"],
  "category": "Registry Operations",
  "description": "Publish Docker images to Docker Hub or other registries",
  "usage": "docker-publish <image-name>[:<tag>] [options]",
  "examples": [
    {
      "command": "dpublish myapp",
      "description": "Publish image 'myapp:latest' to Docker Hub"
    },
    {
      "command": "dpublish myapp:v1.0.0",
      "description": "Publish specific version to Docker Hub"
    },
    {
      "command": "dpublish username/myapp --registry gcr.io",
      "description": "Publish to Google Container Registry"
    },
    {
      "command": "dpublish myapp --tag v1.0.0 --tag latest",
      "description": "Publish with multiple tags"
    },
    {
      "command": "dpublish myapp --platform linux/amd64,linux/arm64",
      "description": "Publish multi-platform image"
    },
    {
      "command": "dpublish --list-repositories",
      "description": "List your Docker Hub repositories"
    },
    {
      "command": "dpublish --help",
      "description": "Show this help message"
    }
  ],
  "options": [
    {
      "flag": "--registry <registry>",
      "description": "Target registry (default: docker.io)"
    },
    {
      "flag": "--tag <tag>",
      "description": "Additional tag for the image (can be used multiple times)"
    },
    {
      "flag": "--platform <platforms>",
      "description": "Target platforms (comma-separated, e.g., linux/amd64,linux/arm64)"
    },
    {
      "flag": "--push-all-tags",
      "description": "Push all tags of the repository"
    },
    {
      "flag": "--disable-content-trust",
      "description": "Skip image signing (default: enabled if configured)"
    },
    {
      "flag": "--quiet, -q",
      "description": "Suppress verbose output"
    },
    {
      "flag": "--list-repositories",
      "description": "List repositories in your Docker Hub account"
    },
    {
      "flag": "--dry-run",
      "description": "Show what would be published without doing it"
    },
    {
      "flag": "--force",
      "description": "Force push even if image exists"
    },
    {
      "flag": "-v, --verbose",
      "description": "Show detailed publish progress"
    },
    {
      "flag": "-h, --help",
      "description": "Show this help message"
    }
  ],
  "registry_examples": [
    "Docker Hub (default) - dpublish username/myapp",
    "AWS ECR - dpublish myapp --registry 123456789012.dkr.ecr.region.amazonaws.com",
    "Google GCR - dpublish myapp --registry gcr.io",
    "Azure ACR - dpublish myapp --registry myregistry.azurecr.io",
    "GitHub Container Registry - dpublish myapp --registry ghcr.io"
  ],
  "publishing_workflow": [
    "1. Build your image: dbuild -t username/myapp .",
    "2. Login to registry: dlogin --username username",
    "3. Publish image: dpublish username/myapp",
    "4. Verify publication: docker pull username/myapp"
  ],
  "security_features": [
    "🔒 Requires authentication via dlogin before publishing",
    "📝 Content trust support for image signing",
    "🔍 Image vulnerability scanning (if registry supports)",
    "⚡ Secure credential handling via Docker daemon",
    "🎯 Registry-specific security policies enforcement"
  ],
  "best_practices": [
    "✅ Use semantic versioning for tags (v1.0.0, v1.0.1)",
    "✅ Tag both specific version and 'latest' for releases",
    "✅ Use multi-platform builds for wider compatibility",
    "✅ Enable content trust for production images",
    "✅ Use private registries for proprietary applications",
    "❌ Don't publish images with 'latest' tag in production",
    "❌ Don't include secrets or credentials in images"
  ],
  "multi_platform_support": [
    "🏗️ Build for multiple architectures simultaneously",
    "📱 Support ARM64 for Apple Silicon and mobile devices",
    "🖥️ Support AMD64 for traditional x86-64 systems",
    "⚡ Automatic platform detection and selection",
    "🎯 Manifest list creation for multi-platform images"
  ],
  "troubleshooting": [
    {
      "issue": "Authentication required",
      "solution": "Run 'dlogin --username your-username' first",
      "command": "dlogin --username myuser && dpublish myapp"
    },
    {
      "issue": "Image not found locally",
      "solution": "Build the image first with dbuild",
      "command": "dbuild -t myapp . && dpublish myapp"
    },
    {
      "issue": "Registry permission denied",
      "solution": "Check repository ownership and permissions",
      "command": "dpublish --list-repositories"
    },
    {
      "issue": "Multi-platform build fails",
      "solution": "Use buildx and create builder instance",
      "command": "docker buildx create --use && dpublish myapp --platform linux/amd64,linux/arm64"
    }
  ],
  "use_cases": [
    "🚀 CI/CD pipeline image deployment",
    "📦 Open source project distribution",
    "🔄 Production application releases",
    "🧪 Sharing development environments",
    "📚 Creating base images for teams"
  ],
  "automation_examples": [
    {
      "use_case": "Release workflow",
      "command": "dpublish myapp:${VERSION} --tag latest",
      "description": "Publish versioned release with latest tag"
    },
    {
      "use_case": "Multi-registry publish",
      "command": "dpublish myapp && dpublish myapp --registry ghcr.io",
      "description": "Publish to both Docker Hub and GitHub"
    },
    {
      "use_case": "Development snapshot",
      "command": "dpublish myapp:dev-$(date +%Y%m%d)",
      "description": "Publish development build with date tag"
    }
  ],
  "notes": [
    "💡 Requires prior authentication with target registry",
    "🔧 Supports all major container registries",
    "📊 Shows upload progress and image details",
    "⚡ Automatic tag management and validation",
    "🎯 Integrates with Docker buildx for advanced features"
  ]
}
