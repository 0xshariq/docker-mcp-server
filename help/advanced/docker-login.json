{
  "name": "docker-login",
  "aliases": ["dlogin"],
  "category": "Advanced Registry Operations",
  "description": "Securely log in to a Docker registry with Docker-handled password authentication",
  "usage": "docker-login [registry] [options]",
  "examples": [
    {
      "command": "dlogin",
      "description": "Check current login status for all registries"
    },
    {
      "command": "dlogin --status",
      "description": "Show detailed login status information"
    },
    {
      "command": "dlogin --username myuser",
      "description": "Login to Docker Hub (Docker prompts for password securely)"
    },
    {
      "command": "dlogin -u myuser",
      "description": "Login to Docker Hub using short flag"
    },
    {
      "command": "dlogin ghcr.io --username myuser",
      "description": "Login to GitHub Container Registry"
    },
    {
      "command": "dlogin registry.company.com --username employee",
      "description": "Login to private company registry"
    },
    {
      "command": "dlogin --token ghp_xxxxxxxxxxxx ghcr.io",
      "description": "Login using GitHub Personal Access Token"
    },
    {
      "command": "dlogin --password-stdin < password.txt",
      "description": "Login using password from stdin (for automation)"
    },
    {
      "command": "dlogin --help",
      "description": "Show this comprehensive help message"
    }
  ],
  "options": [
    {
      "flag": "-u, --username <username>",
      "description": "Username for registry authentication"
    },
    {
      "flag": "--token <token>",
      "description": "Authentication token (for GitHub, GitLab, etc.)"
    },
    {
      "flag": "--password-stdin",
      "description": "Read password from stdin (secure for automation)"
    },
    {
      "flag": "--status",
      "description": "Show current login status for all registries"
    },
    {
      "flag": "-i, --interactive",
      "description": "Force interactive password prompt"
    },
    {
      "flag": "--logout",
      "description": "Logout from specified registry (or all if none specified)"
    },
    {
      "flag": "-h, --help",
      "description": "Show this comprehensive help message"
    }
  ],
  "registries": [
    {
      "name": "Docker Hub",
      "url": "docker.io (default)",
      "example": "dlogin --username myuser",
      "auth": "Username/Password or Personal Access Token"
    },
    {
      "name": "GitHub Container Registry",
      "url": "ghcr.io",
      "example": "dlogin ghcr.io --username myuser",
      "auth": "GitHub username with Personal Access Token"
    },
    {
      "name": "Google Container Registry",
      "url": "gcr.io",
      "example": "dlogin gcr.io --username _json_key",
      "auth": "Service account key as password"
    },
    {
      "name": "Amazon ECR",
      "url": "*.dkr.ecr.*.amazonaws.com",
      "example": "aws ecr get-login-password | dlogin --password-stdin 123456789012.dkr.ecr.us-east-1.amazonaws.com",
      "auth": "AWS CLI authentication required"
    },
    {
      "name": "Azure Container Registry",
      "url": "*.azurecr.io",
      "example": "dlogin myregistry.azurecr.io --username myregistry",
      "auth": "Azure AD or admin credentials"
    }
  ],
  "security": [
    "üîê **SECURE PASSWORD HANDLING**: Password is NEVER passed as command argument",
    "üõ°Ô∏è  **DOCKER DAEMON SECURITY**: Docker prompts for password interactively and handles storage",
    "üîë **CREDENTIAL STORAGE**: Login credentials stored securely in Docker's keychain/config",
    "üí° **TOKEN AUTHENTICATION**: Use tokens for CI/CD and automated environments",
    "üö´ **NO COMMAND HISTORY**: Passwords never appear in shell history or process lists",
    "üîí **STDIN OPTION**: Use --password-stdin for secure automation scripts"
  ],
  "security_best_practices": [
    "‚úÖ Always use interactive password prompts for manual login",
    "‚úÖ Use Personal Access Tokens for GitHub/GitLab registries",
    "‚úÖ Use --password-stdin for automation to avoid command line exposure",
    "‚úÖ Regularly rotate passwords and tokens",
    "‚ùå Never pass passwords as command line arguments",
    "‚ùå Never store passwords in plain text files",
    "‚ùå Never use passwords in CI/CD environment variables"
  ],
  "notes": [
    "üí° **Status Check**: Run without arguments to check current login status",
    "üîê **Secure by Design**: Docker daemon handles all password operations securely",
    "üîß **Persistent Login**: Login persists until 'docker logout' or credential expiry",
    "‚ö° **Required for Private**: Authentication required for pushing/pulling private images",
    "üöÄ **CI/CD Ready**: Use --password-stdin for automated deployment pipelines",
    "ÔøΩ **Multiple Registries**: Can be logged into multiple registries simultaneously"
  ],
  "troubleshooting": [
    {
      "issue": "Login fails with 'unauthorized'",
      "solution": "Verify username and password/token are correct"
    },
    {
      "issue": "Token authentication not working",
      "solution": "Ensure token has correct permissions (read:packages, write:packages)"
    },
    {
      "issue": "ECR login issues",
      "solution": "Use AWS CLI: aws ecr get-login-password --region region | docker login --username AWS --password-stdin uri"
    },
    {
      "issue": "Cannot push after login",
      "solution": "Check if repository exists and you have push permissions"
    }
  ]
}
