{
  "name": "docker-run",
  "aliases": ["drun"],
  "category": "Basic Container Operations",
  "description": "Run a Docker container with comprehensive options",
  "usage": "docker-run <imageName> [options] [command]",
  "examples": [
    {
      "command": "drun nginx -d --name web-server -p 8080:80",
      "description": "Run nginx in detached mode with port mapping"
    },
    {
      "command": "drun ubuntu:20.04 --rm -it bash",
      "description": "Run Ubuntu interactively and remove after exit"
    },
    {
      "command": "drun redis --name redis-cache --restart always",
      "description": "Run Redis with auto-restart policy"
    },
    {
      "command": "drun mysql:8.0 -e MYSQL_ROOT_PASSWORD=secret -v /data:/var/lib/mysql",
      "description": "Run MySQL with environment variable and volume mount"
    },
    {
      "command": "drun --help",
      "description": "Show this help message"
    }
  ],
  "options": [
    {
      "flag": "-d, --detach",
      "description": "Run container in background (detached mode)"
    },
    {
      "flag": "-it",
      "description": "Run interactively with TTY (combined -i and -t)"
    },
    {
      "flag": "-i, --interactive",
      "description": "Keep STDIN open even if not attached"
    },
    {
      "flag": "-t, --tty",
      "description": "Allocate a pseudo-TTY"
    },
    {
      "flag": "--rm",
      "description": "Automatically remove container when it exits"
    },
    {
      "flag": "--name <name>",
      "description": "Assign a name to the container"
    },
    {
      "flag": "-p, --publish <host>:<container>",
      "description": "Publish container port to host (can be used multiple times)"
    },
    {
      "flag": "-P, --publish-all",
      "description": "Publish all exposed ports to random host ports"
    },
    {
      "flag": "-v, --volume <host>:<container>",
      "description": "Bind mount a volume (can be used multiple times)"
    },
    {
      "flag": "-e, --env <VAR>=<value>",
      "description": "Set environment variables (can be used multiple times)"
    },
    {
      "flag": "--env-file <file>",
      "description": "Read environment variables from file"
    },
    {
      "flag": "-w, --workdir <dir>",
      "description": "Working directory inside the container"
    },
    {
      "flag": "--restart <policy>",
      "description": "Restart policy (no, always, on-failure, unless-stopped)"
    },
    {
      "flag": "-m, --memory <limit>",
      "description": "Memory limit (e.g., 512m, 2g)"
    },
    {
      "flag": "--cpus <limit>",
      "description": "Number of CPUs (e.g., 0.5, 2.0)"
    },
    {
      "flag": "-u, --user <user>",
      "description": "Username or UID (format: <name|uid>[:<group|gid>])"
    },
    {
      "flag": "--privileged",
      "description": "Give extended privileges to this container"
    },
    {
      "flag": "--network <network>",
      "description": "Connect container to network"
    },
    {
      "flag": "--hostname <name>",
      "description": "Container host name"
    },
    {
      "flag": "-h, --help",
      "description": "Show this help message"
    }
  ],
  "notes": [
    "üí° Container details (name, ID, ports, IP) will be displayed after successful creation",
    "üîß Use 'dlogs <container>' to view container logs",
    "üñ•Ô∏è  Use 'dexec <container> <command>' to execute commands in running container",
    "‚èπÔ∏è  Use 'docker stop <container>' to stop a running container"
  ]
}
