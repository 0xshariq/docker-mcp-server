{
  "name": "docker-build",
  "aliases": ["dbuild"],
  "category": "Basic Image Operations",
  "description": "Build a Docker image from a Dockerfile with comprehensive options",
  "usage": "docker-build <contextPath> [options]",
  "examples": [
    {
      "command": "dbuild . -t myapp:latest",
      "description": "Build image from current directory with tag"
    },
    {
      "command": "dbuild . -f Dockerfile.prod -t myapp:prod",
      "description": "Build using specific Dockerfile with tag"
    },
    {
      "command": "dbuild . --no-cache -t myapp:dev",
      "description": "Build without using cache"
    },
    {
      "command": "dbuild . --build-arg NODE_ENV=production -t myapp:prod",
      "description": "Build with build arguments"
    },
    {
      "command": "dbuild --help",
      "description": "Show this help message"
    }
  ],
  "options": [
    {
      "flag": "-t, --tag <name>",
      "description": "Name and optionally tag for the image (format: name:tag)"
    },
    {
      "flag": "-f, --file <dockerfile>",
      "description": "Name of the Dockerfile (default: PATH/Dockerfile)"
    },
    {
      "flag": "--build-arg <arg>",
      "description": "Set build-time variables (can be used multiple times)"
    },
    {
      "flag": "--target <stage>",
      "description": "Set the target build stage to build"
    },
    {
      "flag": "--no-cache",
      "description": "Do not use cache when building the image"
    },
    {
      "flag": "--pull",
      "description": "Always attempt to pull a newer version of the image"
    },
    {
      "flag": "-q, --quiet",
      "description": "Suppress the build output and print image ID on success"
    },
    {
      "flag": "--platform <platform>",
      "description": "Set platform if server is multi-platform capable"
    },
    {
      "flag": "--progress <type>",
      "description": "Set type of progress output (auto, plain, tty)"
    },
    {
      "flag": "--label <label>",
      "description": "Set metadata for an image (can be used multiple times)"
    },
    {
      "flag": "-m, --memory <bytes>",
      "description": "Memory limit"
    },
    {
      "flag": "--cpu-shares <shares>",
      "description": "CPU shares (relative weight)"
    },
    {
      "flag": "--compress",
      "description": "Compress the build context using gzip"
    },
    {
      "flag": "--force-rm",
      "description": "Always remove intermediate containers"
    },
    {
      "flag": "--rm",
      "description": "Remove intermediate containers after successful build (default)"
    },
    {
      "flag": "-h, --help",
      "description": "Show this help message"
    }
  ],
  "notes": [
    "ðŸ’¡ Build context is the set of files located in the specified PATH or URL",
    "ðŸ”§ Use .dockerignore to exclude files and directories from build context",
    "ðŸ“¦ Multi-stage builds allow you to use multiple FROM statements in Dockerfile",
    "âš¡ Use --no-cache when you want to ensure fresh build without cached layers"
  ]
}
